<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Shopping Cart</title>
  <style>
    * {
      box-sizing: border-box;
      font-family: 'Segoe UI', sans-serif;
      margin: 0;
      padding: 0;
    }

    :root {
      --color_I: #f2e6ee;
      --color_II: #977dff;
      --color_V: #977dff;
      --color_VI: #ffccf2;
      --color_III: #0033ff;
      --color_IV: #0600ab;
      --color_VII: #00003d;
      --secsolor_I: #ffa930;
    }
   

    body {
      font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
        background: linear-gradient(120deg,var(--color_III),var(--color_VI));
        color: #000000;
        min-height: 100vh;
        line-height: 1.5;
        background: linear-gradient(120deg, var(--color_III), var(--color_II), var(--color_V));
        background-size: 200% 200%; /* Make the background larger than the viewport */
        animation: gradientDrift 15s ease infinite; /* Apply the animation */
    
    }

    @keyframes gradientDrift {
        0% { background-position: 0% 50%; }
        50% { background-position: 100% 50%; }
        100% { background-position: 0% 50%; }
    }
    /* Noise Overlay */
    body::before {
        content: "";
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        /* Tiny random dots */
        background-image: 
            radial-gradient(rgba(0, 0, 0, 0.2) 1px, transparent 0);

        background-size: 3px 3px; /* density of dots */
        opacity: 0.8; /* how visible the grain is */
        pointer-events: none; /* lets clicks pass through */
        z-index: -1;
    }

    header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 1rem 5rem;
            z-index: 1000;
            /* Sticky position properties */
            position: sticky;
            top: 0;
        }

        header h1 {
            margin: 0;
            font-size: 3rem;
        }

        nav {
            display: flex;
            align-items: center;
            gap: 2rem;
            margin-left: -5%;
            z-index: 999;
        }

        .logo {
            font-family: Impact, Haettenschweiler, 'Arial Narrow Bold', sans-serif;
        }

        nav a {
            font-size: 1rem;
            letter-spacing: 0.1rem;
            transition: color 0.2s ease-in-out;
            text-decoration: none;
            color: inherit;
        }

    .main {
        display: flex;
        flex-direction: row;
        gap: 30px;
        max-width: 1200px;
        width: 100%;
        margin: 40px auto 0 auto; /* üëà Center horizontally */
        padding: 0 20px; /* üëà Optional, for some spacing on small screens */
      }


    .cart-container {
      flex: 6;
       /* Styling */
        background: rgba(255, 255, 255, 0.1);
        backdrop-filter: blur(12px);
        border-radius: 16px;
        padding: 1.5rem;
        box-shadow: 0 8px 32px 0 rgba(0, 0, 0, 0.37);
        border: 1px solid rgba(255, 255, 255, 0.18);
    }

    .summary-box {
      flex: 1;
      position: sticky;
      top: 40px;
       background: rgba(255, 255, 255, 0.1);
        backdrop-filter: blur(12px);
        border-radius: 16px;
        padding: 1.5rem;
        box-shadow: 0 8px 32px 0 rgba(0, 0, 0, 0.37);
        border: 1px solid rgba(255, 255, 255, 0.18);
    }

    h1 {
      font-size: 32px;
      font-weight: 600;
      color: #000000;
      margin-bottom: 25px;
      text-align: center;
    }

    .cart-item {
      display: flex;
      align-items: center;
      justify-content: space-between;
      border-bottom: 1px solid #e2e8f0;
      padding: 16px 0;
      gap: 20px;
      flex-wrap: wrap;
    }

    .cart-item img {
      width: 80px;
      height: 80px;
      border-radius: 12px;
      object-fit: cover;
      margin-right: 10px;
      flex-shrink: 0;
    }

    .item-details {
      flex: 1;
    }

    .item-title {
      font-size: 18px;
      font-weight: 500;
      margin-bottom: 8px;
      color: #1e293b;
    }

    .item-description {
      font-size: 14px;
      color: #ffffff;
      margin-bottom: 6px;
    }

    .quantity-control {
      display: flex;
      align-items: center;
      gap: 10px;
      flex-wrap: wrap;
    }

    .quantity-control button {
      background-color: #ffffff;
      color: #000000;
      border: none;
      padding: 6px 10px;
      border-radius: 6px;
      font-size: 16px;
      cursor: pointer;
    }

    .quantity-control span {
      font-size: 16px;
      min-width: 20px;
      text-align: center;
    }

    .total-price {
      font-size: 18px;
      font-weight: 600;
      color: #0f172a;
    }

    .remove-btn {
      background-color: #ef4444;
      color: white;
      border: none;
      padding: 6px 10px;
      border-radius: 6px;
      font-size: 14px;
      cursor: pointer;
    }

    .buy-now-btn {
      background-color: #10b981;
      color: white;
      border: none;
      padding: 6px 10px;
      border-radius: 6px;
      font-size: 14px;
      cursor: pointer;
    }

    .summary-box h2 {
      font-size: 24px;
      margin-bottom: 20px;
      color: #ffffff;
    }

    .summary-box .total {
      font-size: 20px;
      margin-bottom: 20px;
    }

    .checkout-btn {
      transition: background 0.3s ease, transform 0.2s ease;
      box-shadow: 0 4px 12px rgba(0, 123, 255, 0.25);
      color: #000000;
      padding: 12px 20px;
      border: none;
      border-radius: 10px;
      font-size: 16px;
      cursor: pointer;
      width: 100%;
    }


    .checkout-btn:hover {
      background: var(--color_III);
      transform: scale(1.02);
    }

    .checkout-btn:active {
      transform: scale(0.99);
    }

    .buy-all-btn {
      margin-top: 10px;
      transition: background 0.3s ease, transform 0.2s ease;
      box-shadow: 0 4px 12px rgba(0, 123, 255, 0.25);
      color: #000000;
      padding: 12px 20px;
      border: none;
      border-radius: 10px;
      font-size: 16px;
      cursor: pointer;
      width: 100%;
    }

    .buy-all-btn:hover {
      background: #008000;
      transform: scale(1.02);
    }

    .buy-all-btn:active {
      transform: scale(0.99);
    }

    @media (max-width: 900px) {
      .main {
        flex-direction: column;
      }

      .summary-box {
        position: static;
        width: 100%;
      }
    }
  </style>
</head>

<body>
  
  <header>
            <h1 class="logo">Burst</h1>
            <nav>
                <a href="/user/createAccount">SIGN UP</a>
                <a href="/user/login">LOG IN</a>
                <a class="home" href="/home">HOME</a>
                <!--<div class="dropdown">
                    <a class="nav-link" href="#">CATEGORIES</a>
                    <div class="dropdown-content">
                        <a href="#">True Wireless Earbuds</a>
                        <a href="#">Wired Earphones</a>
                        <a href="#">Wireless Headphones</a>
                        <a href="#">Wired Headphones</a>
                        <a href="#">Gaming Headphones</a>
                        <a href="#">Neackbands</a>
                        <a href="#">LIMITED EDITION</a>
                    </div>
                </div> -->
                <a href="/user/profile"><img src="/user.svg" alt="Profile"></a>
                

            </nav>
        </header>

  <div class="main">
    <div class="cart-container">
      <h1>Your Shopping Cart</h1>

      <% populateItems.forEach(item=> { %>
        <% if (item.productId) { %>
          <div class="cart-item" data-price="<%= item.productId.price %>">
            <img src="../public/cartimg_1.png" alt="Headphone" />
            <div class="item-details">
              <div class="item-title">
                <%= item.productId.productName %>
              </div>
              <div class="item-description">
                <%= item.productId.description %>
              </div>
              <div class="quantity-control">
                <button onclick="updateQty(this, -1)">‚àí</button>
                <span class="qty">
                  <%= item.quantity %>
                </span>
                <button onclick="updateQty(this, 1)">+</button>
                <button class="remove-btn" onclick="removeItem(this, `<%= item._id %>`)">Remove</button>
                <button class="buy-now-btn" onclick="buyNow(this, `<%= item.productId._id %>`)">Buy Now</button>
              </div>
            </div>
            <div class="total-price">‚Çπ<span class="item-total">
                <%= item.productId.price %>
              </span></div>
          </div>
          <% } else { %>
            <div class="cart-item missing-product">
              <div class="item-title">‚ö†Ô∏è Product no longer available</div>
              <button class="remove-btn" onclick="removeItem(this)">Remove</button>
            </div>
            <% } %>
              <% }) %>


                <!-- <div class="cart-item" data-price="2157">
            <img src="../public/cartimg_2.png" alt="Headphone" />
            <div class="item-details">
              <div class="item-description">Lightweight in-ear wired earphones with tangle-free cable and stereo sound.
              </div>
              <div class="quantity-control">
                <button onclick="updateQty(this, -1)">‚àí</button>
                <span class="qty">1</span>
                <button onclick="updateQty(this, 1)">+</button>
                <button class="remove-btn" onclick="removeItem(this)">Remove</button>
                <button class="buy-now-btn" onclick="buyNow(this)">Buy Now</button>
              </div>
            </div>
            <div class="total-price">‚Çπ<span class="item-total">2157.00</span></div>
          </div>

          <div class="cart-item" data-price="7462">
            <img src="../public/cartimg_3.png" alt="Headphone" />
            <div class="item-details">
              <div class="item-title">Noise Wireless Headphones</div>
              <div class="item-description">Over-ear Bluetooth headphones with deep bass and long battery life.</div>
              <div class="quantity-control">
                <button onclick="updateQty(this, -1)">‚àí</button>
                <span class="qty">1</span>
                <button onclick="updateQty(this, 1)">+</button>
                <button class="remove-btn" onclick="removeItem(this)">Remove</button>
                <button class="buy-now-btn" onclick="buyNow(this)">Buy Now</button>
              </div>
            </div>
            <div class="total-price">‚Çπ<span class="item-total">7462.00</span></div>
          </div>

          <div class="cart-item" data-price="2905">
            <img src="../public/cartimg_4.png" alt="Headphone" />
            <div class="item-details">
              <div class="item-title">Mechanical KeyboardBoat Rockerz 255 Neckband</div>
              <div class="item-description">Wireless Bluetooth neckband with deep bass and fast charging.</div>
              <div class="quantity-control">
                <button onclick="updateQty(this, -1)">‚àí</button>
                <span class="qty">1</span>
                <button onclick="updateQty(this, 1)">+</button>
                <button class="remove-btn" onclick="removeItem(this)">Remove</button>
                <button class="buy-now-btn" onclick="buyNow(this)">Buy Now</button>
              </div>
            </div>
            <div class="total-price">‚Çπ<span class="item-total">2905.00</span></div>
          </div>

          <div class="cart-item" data-price="1619">
            <img src="../public/cartimg_5.png" alt="Headphone" />
            <div class="item-details">
              <div class="item-title">JBL Bluetooth Speaker</div>
              <div class="item-description">Portable wireless speaker with deep bass and waterproof design.</div>
              <div class="quantity-control">
                <button onclick="updateQty(this, -1)">‚àí</button>
                <span class="qty">1</span>
                <button onclick="updateQty(this, 1)">+</button>
                <button class="remove-btn" onclick="removeItem(this)">Remove</button>
                <button class="buy-now-btn" onclick="buyNow(this)">Buy Now</button>
              </div>
            </div>
            <div class="total-price">‚Çπ<span class="item-total">1619.00</span></div>
          </div>

          <div class="cart-item" data-price="4972">
            <img src="../public/cartimg_6.png" alt="Headphone" />
            <div class="item-details">
              <div class="item-title">Sony WH-CH520 Wireless Headphones</div>
              <div class="item-description">Lightweight wireless headphones with 50-hour battery life and clear sound.
              </div>
              <div class="quantity-control">
                <button onclick="updateQty(this, -1)">‚àí</button>
                <span class="qty">1</span>
                <button onclick="updateQty(this, 1)">+</button>
                <button class="remove-btn" onclick="removeItem(this)">Remove</button>
                <button class="buy-now-btn" onclick="buyNow(this)">Buy Now</button>
              </div>
            </div>
            <div class="total-price">‚Çπ<span class="item-total">4972.00</span></div>
          </div>
    </div> -->

                <div class="summary-box">
                  <h2>Order Summary</h2>
                  <div class="total">Total: ‚Çπ<span id="cart-total">0.00</span></div>
                  <!-- <button class="checkout-btn">Proceed to Checkout</button> -->
                  <button class="buy-all-btn" onclick="buyAllItems()">Buy All Items</button>
                </div>
    </div>

    <script>
      function updateQty(button, change) {
        const qtySpan = button.parentElement.querySelector(".qty");
        let qty = parseInt(qtySpan.textContent);
        qty = Math.max(1, qty + change);
        qtySpan.textContent = qty;

        const item = button.closest(".cart-item");
        const price = parseFloat(item.getAttribute("data-price"));
        const itemTotal = item.querySelector(".item-total");
        itemTotal.textContent = (qty * price).toFixed(2);

        updateCartTotal();
      }

      function updateCartTotal() {
        const items = document.querySelectorAll(".cart-item");
        let total = 0;
        items.forEach(item => {
          const qty = parseInt(item.querySelector(".qty").textContent);
          const price = parseFloat(item.getAttribute("data-price"));
          total += qty * price;
        });
        document.getElementById("cart-total").textContent = total.toFixed(2);
      }

      async function removeItem(button, cartId) {
        const response = await fetch("/cart", {
          method: "delete",
          headers: {
            "Content-Type": "application/json"
          },
          body: JSON.stringify({ cartId })
        });
        console.log(cartId);
        console.log("Done");
        updateCartTotal();
        const item = button.closest(".cart-item");
        item.remove();
        updateCartTotal();
      }

      function buyNow(button, productId) {
        const item = button.closest(".cart-item");
        const title = item.querySelector(".item-title").textContent;
        const quantity = parseInt(item.querySelector(".qty").textContent);
        const total = item.querySelector(".item-total").textContent;
        //alert(`Purchased ${qty} x ${title} for ‚Çπ${total}`);

        //const quantity = parseInt(document.getElementById('qty').value);
        console.log("quantity", quantity)
        if (!productId || productId === "undefined") {
          console.error("Invalid product ID passed to fetch!");
          return;
        }

        window.location.href = `/buyNow/${productId}?quantity=${quantity}`;
        console.log("done");

        document.getElementById("cart-total").textContent = parseFloat(total).toFixed(2);
      }

      async function buyAllItems() {
        //alert("All items have been purchased successfully!");
        try {
          // Collect address from user (or auto-use saved address)
          //const address = prompt("Enter your shipping address (Leave empty to use your default address):");
          const address = "";
          const bodyData = {
            address// or some string
          };

          const response = await fetch("/buyNow/cartCheckout", {
            method: "POST",
            headers: {
              "Content-Type": "application/json"
            },
            body: JSON.stringify({ address })
          });

          const result = await response.json();

          if (response.ok) {
            //alert(result.msg || "Order placed successfully!");
            window.location.href = "/home";
          } else {
            alert(result.msg || "Something went wrong.");
          }
        } catch (err) {
          console.error("Buy all items failed:", err);
          alert("Failed to place the order. Try again later.");
        }

        updateCartTotal();
      }

      updateCartTotal();
    </script>
</body>

</html>