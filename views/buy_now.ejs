<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Buy Now</title>
  <style>
    * {
      box-sizing: border-box;
      font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
      margin: 0;
      padding: 0;
    }

    :root {
      --color_I: #f2e6ee;
      --color_II: #977dff;
      --color_V: #977dff;
      --color_VI: #ffccf2;
      --color_III: #214dff;
      --color_IV: #0600ab;
      --color_VII: #00003d;
      --secsolor_I: #ffa930;
    }

    body {
      background: linear-gradient(120deg, var(--color_III), var(--color_II), var(--color_VI));
      background-size: 200% 200%;
      animation: gradientDrift 15s ease infinite;
      color: black;
      min-height: 100vh;
      line-height: 1.5;
      display: flex;
      flex-direction: column; /* Allow header and main to stack */
      align-items: center;
      padding: 20px;
    }

    @keyframes gradientDrift {
      0% { background-position: 0% 50%; }
      50% { background-position: 100% 50%; }
      100% { background-position: 0% 50%; }
    }

    /* Noise Overlay */
    body::before {
      content: "";
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-image: radial-gradient(rgba(0, 0, 0, 0.2) 1px, transparent 0);
      background-size: 3px 3px;
      opacity: 0.8;
      pointer-events: none;
      z-index: -1;
    }

    header {
      width: 100%;
      max-width: 1200px; /* Max width for content */
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 1rem 0; /* Adjusted padding */
      margin-bottom: 2rem; /* Space between header and card */
    }

    header h1 {
      margin: 0;
      font-size: 2.5rem; /* Slightly smaller for balance */
      font-family: Impact, Haettenschweiler, 'Arial Narrow Bold', sans-serif;
      color: black;
      text-shadow: 2px 2px 4px rgba(0,0,0,0.2);
    }

    nav {
      display: flex;
      align-items: center;
      gap: 1.5rem; /* Adjusted gap */
    }

    nav a {
      font-size: 1rem;
      letter-spacing: 0.1rem;
      transition: color 0.2s ease-in-out, transform 0.2s ease;
      text-decoration: none;
      color: black;
      font-weight: 500;
    }
    nav img {
        width: 24px;
        height: 24px;
        filter: invert(90%) sepia(13%) saturate(301%) hue-rotate(200deg) brightness(113%) contrast(92%);
        transition: filter 0.2s ease;
    }
    
    .main-card {
      width: 100%;
      max-width: 550px; /* Constrain card width for larger screens */
      background: rgba(255, 255, 255, 0.1);
      backdrop-filter: blur(10px);
      border-radius: 16px;
      padding: 2rem;
      box-shadow: 0 8px 32px 0 rgba(0, 0, 0, 0.37);
      transition: transform 0.3s ease;
    }

    .main-card:hover {
      transform: translateY(-4px);
    }

    .main-card h2 {
      font-family: Impact, Haettenschweiler, 'Arial Narrow Bold', sans-serif;
      margin-bottom: 25px;
      text-align: center;
      color: black;
      font-size: 2.2rem;
      font-weight: 400;
      letter-spacing: 1px;
    }

    .input-group {
      margin-bottom: 20px;
      display: flex;
      align-items: center;
      justify-content: space-between;
      flex-wrap: wrap; /* Allow items to wrap on small screens */
    }

    .input-group label {
      display: block;
      margin-bottom: 8px; /* Add margin for stacked layout */
      flex-basis: 120px; /* Fixed base width for labels */
      color: black;
      font-weight: 600;
    }
    
    .input-container {
        flex: 1; /* Allow this container to grow */
        display: flex;
        flex-direction: column;
    }

    .input-group input,
    .input-group textarea {
      width: 100%;
      padding: 12px 14px;
      border: 1px solid #cbd9f2;
      border-radius: 10px;
      font-size: 14px;
      background: #f9fbff;
      transition: border 0.3s;
    }

    .input-value {
      flex: 1;
      padding: 12px 14px;
      font-size: 14px;
      font-weight: 500;
      min-width: 150px;
      border-radius: 10px;
      background: #f9fbff;
      border: 1px solid #cbd9f2;
    }


    .input-group input:focus,
    .input-group textarea:focus {
      border-color: #5a9bff;
      outline: none;
      background: #ffffff;
    }

    .radio-group {
      display: flex;
      gap: 20px;
      margin-bottom: 12px; /* Space between radios and textarea */
      font-size: 14px;
    }

    .radio-group input {
      margin-right: 6px;
      accent-color: #007bff;
    }

    #other-address-input {
      display: none; /* Hidden by default */
      resize: vertical;
    }

    .product-card {
      background: #ecf3ff;
      border: 1px solid #c6dbff;
      padding: 18px 20px;
      border-radius: 14px;
      margin-top: 25px;
      box-shadow: inset 0 2px 8px rgba(0, 0, 0, 0.03);
    }

    .product-card h3 {
      margin-bottom: 12px;
      font-size: 17px;
      font-weight: 600;
      color: #1d3b6e;
      border-bottom: 1px solid #dce6f8;
      padding-bottom: 6px;
    }

    .product-card .info {
      display: flex;
      justify-content: space-between;
      margin: 10px 0;
      color: #444;
      font-size: 14px;
    }

    .product-card .info strong {
      color: #1a1a1a;
    }

    .buy-btn {
      margin-top: 28px;
      width: 100%;
      padding: 14px;
      background: var(--color_IV);
      border: none;
      color: white;
      font-size: 16px;
      font-weight: 600;
      border-radius: 12px;
      cursor: pointer;
      transition: background 0.3s ease, transform 0.2s ease;
      box-shadow: 0 4px 12px rgba(0, 123, 255, 0.25);
    }

    .buy-btn:hover {
      background: var(--color_III);
      transform: scale(1.02);
    }

    .buy-btn:active {
      transform: scale(0.99);
    }
    
    /* --- Responsive Design --- */
    @media (max-width: 600px) {
        body {
            padding: 15px;
        }
        
        header {
            flex-direction: column;
            gap: 1rem;
            text-align: center;
            margin-bottom: 1.5rem;
        }

        .main-card {
            padding: 1.5rem;
        }

        .input-group {
            flex-direction: column;
            align-items: flex-start; /* Align labels to the start */
        }
        
        .input-group label {
            flex-basis: auto; /* Allow label width to be auto */
            margin-right: 0;
        }
    }
  </style>
</head>

<body>
  <header>
    <h1 class="logo">Burst</h1>
    <nav>
      <a class="home" href="/home">HOME</a>
      <a href="/user/profile"><img src="/user.svg" alt="Profile"></a>
      <a href="/cart?json=false"><img src="/shopping-bag.svg" alt="Cart"></a>
    </nav>
  </header>

  <div class="main-card">
    <h2>Buy Now</h2>

    <div class="input-group">
      <label for="username">Username</label>
      <div class="input-value">
        <%= data[0].UserName %>
      </div>
    </div>

    <div class="input-group">
      <label>Address</label>
      <div class="input-container">
            <div class="radio-group">
                <label><input type="radio" name="addressOption" value="original" checked> Original Address</label>
                <label><input type="radio" name="addressOption" value="other"> Another Address</label>
            </div>
            <textarea id="other-address-input" rows="3" placeholder="Enter another address"></textarea>
      </div>
    </div>

    <div class="input-group">
      <label for="email">Email Address</label>
      <div class="input-value">
        <%= data[0].Email %>
      </div>
    </div>

    <div class="product-card">
      <h3>Order Summary</h3>
      <div class="info">
        <span>Product Name:</span>
        <span><%= data[0].ProductName %></span>
      </div>
      <div class="info">
        <span>Quantity:</span>
        <span id="qty"><%= data[0].quantity %></span>
      </div>
      <div class="info">
        <span>Price per item:</span>
        <span id="price">₹<%= data[0].price %></span>
      </div>
      <div class="info">
        <strong>Total Amount:</strong>
        <strong id="total">₹0</strong> </div>
    </div>

    <button class="buy-btn" onclick="buyNowProduct('<%= data[0].id %>', <%= data[0].quantity %>)">Confirm & Buy</button>
  </div>

  <script>
    // Address toggle logic
    const addressRadios = document.getElementsByName('addressOption');
    const otherAddressInput = document.getElementById('other-address-input');

    addressRadios.forEach(radio => {
      radio.addEventListener('change', () => {
        if (radio.value === 'other' && radio.checked) {
          otherAddressInput.style.display = 'block';
        } else {
          otherAddressInput.style.display = 'none';
        }
      });
    });

    // --- CORRECTED Price Calculation ---
    function calculateTotal() {
        // Get the price per item
        const priceElement = document.getElementById("price");
        const priceText = priceElement.textContent.trim(); // "₹2999"
        const pricePerItem = parseFloat(priceText.replace(/[^\d.]/g, '')); // 2999

        // Get the quantity
        const qtyElement = document.getElementById("qty");
        const quantity = parseInt(qtyElement.textContent.trim(), 10);

        // Calculate total
        const totalAmount = pricePerItem * quantity;
        
        // Update the Total Amount in the DOM
        document.getElementById('total').innerText = `₹${totalAmount.toFixed(2)}`;
    }
    
    // Calculate total on page load
    document.addEventListener('DOMContentLoaded', calculateTotal);


    // Buy Now fetch logic
    async function buyNowProduct(id, quantity) {
      const selectedOption = document.querySelector('input[name="addressOption"]:checked').value;

      let address;
      if (selectedOption === 'other') {
        address = document.getElementById('other-address-input').value.trim();
        if (!address) {
            alert("Please enter the new address.");
            return;
        }
      } else {
        // Use an empty string to signal the backend to use the original address
        address = ""; 
      }

      const bodyData = { address };

      try {
        const response = await fetch(`/buyNow/${id}?quantity=${quantity}`, {
          method: "post",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify(bodyData),
        });
        
        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }

        const responseBody = await response.json();

        if (responseBody.redirect) {
          console.log("Redirecting to:", responseBody.redirect);
          window.location.href = responseBody.redirect;
        }
      } catch (error) {
        console.error("Error during purchase:", error);
        alert("There was an issue processing your purchase. Please try again.");
      }
    }
  </script>

</body>
</html>